Insertion sort
Merge sort
binary search
vectors  <int>
stacks <int>FILO
queues <int> FIFO
pairs <int, int> p; // datatype
        {
              p.make_pair(10,20);
              p.first();
              p.second();
         }
 maps
 set <int> a; a.insert() and a.erase(); //unique and sorted

Graphs
DFS
BFS

KOSARAJU algorithm
DIJKSTRA's algorithm


Dynamic programming
  Substring   -> always continuous nC2
  Subsequence -> contiguous   2^n

  Palindrome
1_Longest_subsequence problem on DP
  A,B are strings
  find the subsequence which is longest to both.
    brute force - Nc2 x Nc2

TREES
  BFTS
  INORDER
  Preorder
  Postorder
  levelorder
DEFINITIONS PERFECT TREES.. etc
BINARY_SEARCH_TREE
    value of any child in left subtree <= value of parent <= value of any child right
    SEARCH:


Graph as a data structure



Dynamic programming:
  Optimization problems
    broken down in to smaller sub problems!
    recurrence relation!
    similar to previously solved problems!

    std::find working

    #include <iostream>     // std::cout
    #include <algorithm>    // std::find
    #include <vector>       // std::vector
    using namespace std;
    int main () {

    int myints[] = { 10, 20, 30, 40 };
    int * p;
    p = std::find (myints, myints+4, 50);
    cout<<*p; //returns 0 if it doesnt exist

    return 0;
    }
